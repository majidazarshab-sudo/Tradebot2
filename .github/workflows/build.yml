name: Build APK (native – ubuntu22 strict)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04   # ← مهم

    env:
      ANDROIDAPI: "31"
      NDKAPI: "21"
      ANDROID_BUILD_TOOLS_VERSION: "34.0.0"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"

    - name: Install system deps
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-pip python3-setuptools git zip unzip openjdk-17-jdk \
          libffi-dev libssl-dev zlib1g-dev libncurses5 libstdc++6 \
          automake autoconf libtool libtool-bin pkg-config gettext gawk curl
        python -m pip install --upgrade "pip<24.1"
        python -m pip install --upgrade "setuptools<70" "wheel<0.43" "virtualenv<20.26" "cython<3.0" buildozer==1.5.0

    - name: Prime Buildozer (create SDK dirs)
      run: |
        buildozer android debug || true

    - name: Install cmdline-tools + stable SDK (STRICT)
      shell: bash
      run: |
        set -euxo pipefail
        SDK="$HOME/.buildozer/android/platform/android-sdk"
        mkdir -p "$SDK/cmdline-tools"
        CT_ZIP="$HOME/cmdline-tools.zip"
        curl -L -o "$CT_ZIP" https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
        rm -rf "$SDK/cmdline-tools/latest"
        mkdir -p "$SDK/cmdline-tools/latest"
        unzip -qo "$CT_ZIP" -d "$HOME/ctmp"
        cp -r "$HOME/ctmp/cmdline-tools/"* "$SDK/cmdline-tools/latest/"

        export ANDROID_SDK_ROOT="$SDK"
        export ANDROID_HOME="$SDK"
        TOOLS="$SDK/cmdline-tools/latest/bin"

        yes | "$TOOLS/sdkmanager" --licenses
        "$TOOLS/sdkmanager" --sdk_root="$SDK" --install "platform-tools" "platforms;android-31" "build-tools;${ANDROID_BUILD_TOOLS_VERSION}"

        # حذف هر build-tools با rc و لینک احتیاطی
        BT="$SDK/build-tools"
        ls -la "$BT" || true
        find "$BT" -maxdepth 1 -type d -name "rc" -print -exec rm -rf {} \; || true
        if [ -d "$BT/34.0.0" ] && [ ! -d "$BT/36.1.0-rc1" ]; then
          ln -s "$BT/34.0.0" "$BT/36.1.0-rc1"
        fi

        # تأیید وجود ابزارهای لازم
        test -x "$SDK/build-tools/34.0.0/aidl"
        "$SDK/build-tools/34.0.0/aidl" --version || true

    - name: Build APK (verbose)
      env:
        ANDROID_SDK_ROOT: ${{ env.HOME }}/.buildozer/android/platform/android-sdk
        ANDROID_HOME: ${{ env.HOME }}/.buildozer/android/platform/android-sdk
        ANDROIDAPI: "31"
        NDKAPI: "21"
        ANDROID_BUILD_TOOLS_VERSION: "34.0.0"
      run: |
        set -euxo pipefail
        export PATH="$ANDROID_SDK_ROOT/build-tools/34.0.0:$PATH"
        buildozer android clean || true
        buildozer -v android debug 2>&1 | tee buildozer_full.log

    - name: List BIN contents
      if: always()
      run: |
        echo "===== BIN ====="
        (ls -R bin || echo "bin/ not found")

    - name: Upload artifacts (APK + logs + bin)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: tradebot-artifacts
        path: |
          bin//*
          buildozer_full.log
        if-no-files-found: warn
